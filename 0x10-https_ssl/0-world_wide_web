#!/usr/bin/env bash
# A Bash script that will display information about subdomains
# Requirements:
# Add the subdomain www to your domain, point it to your lb-01 IP (your domain name might be configured with default subdomains, feel free to remove them)
# Add the subdomain lb-01 to your domain, point it to your lb-01 IP
# Add the subdomain web-01 to your domain, point it to your web-01 IP
# Add the subdomain web-02 to your domain, point it to your web-02 IP
# Your Bash script must accept 2 arguments:
# domain:
#	type: string
#	what: domain name to audit
#	mandatory: yes
# subdomain:
#	type: string
#	what: specific subdomain to audit
#	mandatory: no
# Output: The subdomain [SUB_DOMAIN] is a [RECORD_TYPE] record and points to [DESTINATION]
# When only the parameter domain is provided, display information for its subdomains www, lb-01, web-01 and web-02 - in this specific order
# When passing domain and subdomain parameters, display information for the specified subdomain
# Ignore shellcheck case SC2086
# Must use:
# awk
# at least one Bash function
# You do not need to handle edge cases such as:
# Empty parameters
# Nonexistent domain names
# Nonexistent subdomains
#
#
#
dns_dig () {
    script=$(dig "$2"."$1" | grep -A1 'ANSWER SECTION:' | tr '\t' '\n' | tail -2 | tr '\n' ' ')
    echo "$2 $script" | awk '{print "The subdomain " $1 " is a " $2 " record and points to " $3}'
}
if [ "$#" == 1 ]
then
  dns_dig "$1" "www"
  dns_dig "$1" "lb-01"
  dns_dig "$1" "web-01"
  dns_dig "$1" "web-02"
elif [ "$#" == 2 ]
then
  dns_dig "$1" "$2"
fi
